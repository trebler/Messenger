kind: Service
apiVersion: v1
metadata:
  name: messengerserver
  namespace: cognite
  labels:
    cognite: messengerserver
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    cognite: messengerserver

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: messengerserver
  namespace: cognite
  labels:
    cognite: messengerserver
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/hsts-max-age: "31536000"
    traefik.ingress.kubernetes.io/hsts-include-subdomains: "true"
    traefik.ingress.kubernetes.io/hsts-preload: "true"
    traefik.ingress.kubernetes.io/referrer-policy: same-origin
    traefik.ingress.kubernetes.io/browser-xss-filter: "true"
    traefik.ingress.kubernetes.io/content-type-nosniff: "true"
    traefik.ingress.kubernetes.io/custom-frame-options-value: sameorigin
    traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
    traefik.ingress.kubernetes.io/auth-type: forward
    traefik.ingress.kubernetes.io/auth-url: http://authservice.cognite.svc.cluster.local/verify
    traefik.ingress.kubernetes.io/auth-response-headers: x-jwt-name, x-jwt-sub, x-jwt-exp, x-jwt-roles
    traefik.ingress.kubernetes.io/rate-limit: |
      extractorfunc: client.ip
      rateset:
        messengerserver:
          period: 10s
          average: 10
          burst: 100
spec:
  rules:
    - host: messenger.trebler.dev
      http:
        paths:
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: messengerserver
                port:
                  name: http

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: messengerserver
  namespace: cognite
  labels:
    cognite: messengerserver
spec:
  replicas: 1
  selector:
    matchLabels:
      cognite: messengerserver
  template:
    metadata:
      namespace: cognite
      labels:
        cognite: messengerserver
    spec:
      containers:
        - name: messengerserver
          image: trebler/messengerserver:latest
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "80"
            # - name: ORIGIN
            #   value: https://messenger.trebler.dev
            - name: DEBUG
              value: ok
          ports:
            - name: http
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 200m
              memory: 200Mi
      nodeSelector:
        doks.digitalocean.com/node-pool: nodepool0
